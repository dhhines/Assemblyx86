Test date: 02/28/21  11:53:10 
The number of times you used the grading program is 1 
In the business world, your customer replaces the grading program. 
The goal is a correct program with the fewest grading attempts. 
Key Grading System Version 4.1
Student: Last=Hines                First=David                Type=Individual          
Grading and testing history log
       User Test.    Date: 02/28/21  11:44:58  keyboard     test         
       User Test.    Date: 02/28/21  11:46:10  nt           test         
       User Test.    Date: 02/28/21  11:49:34  keyboard     test         
       User Test.    Date: 02/28/21  11:49:59  keyboard     test         
       User Test.    Date: 02/28/21  11:50:24  keyboard     test         
       User Test.    Date: 02/28/21  11:50:46  keyboard     test         
       User Test.    Date: 02/28/21  11:51:11  keyboard     test         
       User Test.    Date: 02/28/21  11:52:24  keyboard     test         
   *** Grading Run.  Date: 02/28/21  11:53:10 
Running test
Test ran correctly.
++ Grade ++   60 = Points earned for correct answers.

-> A major reason for programming in assembler is to maximize efficiency.
This can be instructions written and/or instructions executed.
Please read the section in the class notes titled Code Complexity.

We are now analyzing your source code. You will be graded on
the number of instructions you wrote to solve this problem.
The target for the number of executable instructions written is:
20 points for   0 -  20  
15 points for  21 -  22  
10 points for  23 -  24 
05 points for  25 -  26 
00 points for  27+      
Your actual counts are:
Lines ....... 111    Comments ...  75    Labels .......   4   
Directives ..   6    Variables ..  11    Executables ..  15    McCabe ..   3 
++ Grade ++   20 = Points earned for code written efficiency.  

The McCabe number for your KEY.ASM is 3 which is considered 
fine for the KEY assignment and indicates reasonable program structure.

-> Analyzing program documentation. 
The heuristic algorithms used may have problems with your specific code. 
Contact the instructor if you detect a problem with your grade. 
DOCPH-0038 The program header format is adequate. 
DOCHB-1.13 Use of code block headers is adequate. 
DOCLC-1.00 Use of line comments is adequate. 
++ Grade ++   20 = Points earned for correct documentation.    

-> Calculating the total grade for the program.                  
This grade is subject to adjustment by the instructor.           
This grade will be reduced by any late submission penalty.       
++ Grade ++  100 = Total grade generated by the Grading System.  

-> Statistics on testing and grading                             
     8  = Number of user tests.                                  
     1  = Number of grading runs to get the program working.     
     0  = Number of grading runs to improve efficiency or documentation. 

+- atyC<6&}xC86&k~C6&juiC86&zuzC766&Zkyz&jgzk@&6858>587&&77@;9@76&

Building the file key.ans for electronic submission...
